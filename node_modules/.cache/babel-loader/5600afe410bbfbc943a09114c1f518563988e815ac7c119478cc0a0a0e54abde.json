{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daniil\\\\Desktop\\\\sobol-react-app\\\\frontend\\\\src\\\\components\\\\CRUDops.jsx\",\n  _s = $RefreshSig$();\nimport { Button, Stack } from '@mui/material';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CRUDops = ({\n  itemData,\n  setItemData\n}) => {\n  _s();\n  const [newItem, setNewItem] = useState({\n    id: '',\n    name: '',\n    addTime: '',\n    cost: ''\n  });\n  const handleCreate = () => {\n    // Perform the create operation here\n    // You can access the newItem state to get the data for the new item\n    // Update the setItemData state with the newly created item if necessary\n    const createdItem = {\n      ...newItem\n    };\n    // Add additional logic to send the createdItem to the backend API or data management system\n    // Update the setItemData state with the newly created item\n    setItemData([...itemData, createdItem]);\n    setNewItem({\n      id: '',\n      name: '',\n      addTime: '',\n      cost: ''\n    });\n  };\n  const handleUpdate = () => {\n    // Perform the update operation here\n    // You can access the newItem state to get the data for the updated item\n    // Update the setItemData state with the updated item if necessary\n    const updatedItem = {\n      ...newItem\n    };\n    // Add additional logic to send the updatedItem to the backend API or data management system\n    // Update the setItemData state with the updated item\n    const updatedData = itemData.map(item => item.id === updatedItem.id ? updatedItem : item);\n    setItemData(updatedData);\n    setNewItem({\n      id: '',\n      name: '',\n      addTime: '',\n      cost: ''\n    });\n  };\n  const handleDelete = () => {\n    // Perform the delete operation here\n    // You can access the newItem state to get the data for the item to delete\n    // Update the setItemData state by removing the deleted item if necessary\n    const deletedItemId = newItem.id;\n    // Add additional logic to send the deletedItemId to the backend API or data management system\n    // Update the setItemData state by removing the deleted item\n    const updatedData = itemData.filter(item => item.id !== deletedItemId);\n    setItemData(updatedData);\n    setNewItem({\n      id: '',\n      name: '',\n      addTime: '',\n      cost: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 flex justify-around\",\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        direction: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: handleCreate,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: handleUpdate,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: handleDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"ID\",\n        value: newItem.id,\n        onChange: e => setNewItem({\n          ...newItem,\n          id: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        value: newItem.name,\n        onChange: e => setNewItem({\n          ...newItem,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add Time\",\n        value: newItem.addTime,\n        onChange: e => setNewItem({\n          ...newItem,\n          addTime: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Cost\",\n        value: newItem.cost,\n        onChange: e => setNewItem({\n          ...newItem,\n          cost: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(CRUDops, \"CcfCCCl+Np98rzJ1yDACxSGuWWg=\");\n_c = CRUDops;\nexport default CRUDops;\nvar _c;\n$RefreshReg$(_c, \"CRUDops\");","map":{"version":3,"names":["Button","Stack","React","useState","jsxDEV","_jsxDEV","CRUDops","itemData","setItemData","_s","newItem","setNewItem","id","name","addTime","cost","handleCreate","createdItem","handleUpdate","updatedItem","updatedData","map","item","handleDelete","deletedItemId","filter","children","className","spacing","direction","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/daniil/Desktop/sobol-react-app/frontend/src/components/CRUDops.jsx"],"sourcesContent":["import { Button, Stack } from '@mui/material';\r\nimport React, { useState } from 'react';\r\n\r\nconst CRUDops = ({ itemData, setItemData }) => {\r\n  const [newItem, setNewItem] = useState({\r\n    id: '',\r\n    name: '',\r\n    addTime: '',\r\n    cost: ''\r\n  });\r\n\r\n  const handleCreate = () => {\r\n    // Perform the create operation here\r\n    // You can access the newItem state to get the data for the new item\r\n    // Update the setItemData state with the newly created item if necessary\r\n    const createdItem = { ...newItem };\r\n    // Add additional logic to send the createdItem to the backend API or data management system\r\n    // Update the setItemData state with the newly created item\r\n    setItemData([...itemData, createdItem]);\r\n    setNewItem({ id: '', name: '', addTime: '', cost: '' });\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    // Perform the update operation here\r\n    // You can access the newItem state to get the data for the updated item\r\n    // Update the setItemData state with the updated item if necessary\r\n    const updatedItem = { ...newItem };\r\n    // Add additional logic to send the updatedItem to the backend API or data management system\r\n    // Update the setItemData state with the updated item\r\n    const updatedData = itemData.map(item =>\r\n      item.id === updatedItem.id ? updatedItem : item\r\n    );\r\n    setItemData(updatedData);\r\n    setNewItem({ id: '', name: '', addTime: '', cost: '' });\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    // Perform the delete operation here\r\n    // You can access the newItem state to get the data for the item to delete\r\n    // Update the setItemData state by removing the deleted item if necessary\r\n    const deletedItemId = newItem.id;\r\n    // Add additional logic to send the deletedItemId to the backend API or data management system\r\n    // Update the setItemData state by removing the deleted item\r\n    const updatedData = itemData.filter(item => item.id !== deletedItemId);\r\n    setItemData(updatedData);\r\n    setNewItem({ id: '', name: '', addTime: '', cost: '' });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='mt-4 flex justify-around'>\r\n        <Stack spacing={2} direction='row'>\r\n          <Button variant='outlined' onClick={handleCreate}>\r\n            Create\r\n          </Button>\r\n          <Button variant='outlined' onClick={handleUpdate}>\r\n            Update\r\n          </Button>\r\n          <Button variant='outlined' onClick={handleDelete}>\r\n            Delete\r\n          </Button>\r\n        </Stack>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type='text'\r\n          placeholder='ID'\r\n          value={newItem.id}\r\n          onChange={e => setNewItem({ ...newItem, id: e.target.value })}\r\n        />\r\n        <input\r\n          type='text'\r\n          placeholder='Name'\r\n          value={newItem.name}\r\n          onChange={e => setNewItem({ ...newItem, name: e.target.value })}\r\n        />\r\n        <input\r\n          type='text'\r\n          placeholder='Add Time'\r\n          value={newItem.addTime}\r\n          onChange={e => setNewItem({ ...newItem, addTime: e.target.value })}\r\n        />\r\n        <input\r\n          type='text'\r\n          placeholder='Cost'\r\n          value={newItem.cost}\r\n          onChange={e => setNewItem({ ...newItem, cost: e.target.value })}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CRUDops;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}