{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daniil\\\\Desktop\\\\modsen-java-front-end\\\\src\\\\components\\\\OrderTable.jsx\",\n  _s = $RefreshSig$();\nimport { Button, Stack } from '@mui/material';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderTable = ({\n  cellsData,\n  cellsName\n}) => {\n  _s();\n  const [itemData, setItemData] = useState([]);\n  const [newItem, setNewItem] = useState({\n    id: ''\n  });\n  const handleCreateOrder = async () => {\n    try {\n      const url = 'http://localhost:8080/api/pizza/order';\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newItem)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to create order');\n      }\n      const createdItem = await response.json();\n      setItemData([...newItem, createdItem]);\n      setNewItem({\n        id: ''\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleUpdateOrder = async () => {\n    try {\n      const url = 'http://localhost:8080/api/pizza/order';\n      const response = await fetch(url, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newItem)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update order');\n      }\n      const updatedItem = await response.json();\n      const updatedData = itemData.map(item => item.id === updatedItem.id ? updatedItem : item);\n      setItemData(updatedData);\n      setNewItem({\n        id: ''\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleDeleteOrder = async () => {\n    try {\n      const url = 'http://localhost:8080/api/pizza/order/';\n      const response = await fetch(url, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newItem)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete order');\n      }\n      const updatedData = itemData.filter(item => item.id !== newItem.id);\n      setItemData(updatedData);\n      setNewItem({\n        id: ''\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 flex justify-around\",\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        direction: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: handleCreateOrder,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: handleUpdateOrder,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: handleDeleteOrder,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"ID\",\n        value: newItem.id,\n        onChange: e => setNewItem({\n          ...newItem,\n          id: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.orderContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Order:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), order.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your order is empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [order.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.orderItem,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [item.name, \" - $\", item.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            className: classes.removeButton,\n            onClick: () => removeFromOrder(item),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          className: classes.createOrderButton,\n          onClick: createOrder,\n          children: \"Create Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 3\n  }, this);\n};\n_s(OrderTable, \"jzEOeVsT9VHu1trqPR11OciLtlE=\");\n_c = OrderTable;\nexport default OrderTable;\nvar _c;\n$RefreshReg$(_c, \"OrderTable\");","map":{"version":3,"names":["Button","Stack","React","useState","jsxDEV","_jsxDEV","OrderTable","cellsData","cellsName","_s","itemData","setItemData","newItem","setNewItem","id","handleCreateOrder","url","response","fetch","method","headers","body","JSON","stringify","ok","Error","createdItem","json","error","console","handleUpdateOrder","updatedItem","updatedData","map","item","handleDeleteOrder","filter","children","className","spacing","direction","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","classes","orderContainer","order","length","index","orderItem","name","price","color","removeButton","removeFromOrder","createOrderButton","createOrder","_c","$RefreshReg$"],"sources":["C:/Users/daniil/Desktop/modsen-java-front-end/src/components/OrderTable.jsx"],"sourcesContent":["import { Button, Stack } from '@mui/material';\r\nimport React, { useState } from 'react';\r\n  \r\n  \r\n  const OrderTable = ({ cellsData, cellsName }) => {\r\n\tconst [itemData, setItemData] = useState([]);\r\n\tconst [newItem, setNewItem] = useState({\r\n\t\tid: '',\r\n\t  });\r\n\tconst handleCreateOrder = async () => {\r\n\t\ttry {\r\n\t\t  const url = 'http://localhost:8080/api/pizza/order';\r\n\t\t  const response = await fetch(url, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t  'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(newItem),\r\n\t\t  });\r\n\t\t  if (!response.ok) {\r\n\t\t\tthrow new Error('Failed to create order');\r\n\t\t  }\r\n\t\t  const createdItem = await response.json();\r\n\t\t  setItemData([...newItem, createdItem]);\r\n\t\t  setNewItem({ id: ''});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t  };\r\n\t  \r\n\t  const handleUpdateOrder = async () => {\r\n\t\ttry {\r\n\t\t  const url = 'http://localhost:8080/api/pizza/order';\r\n\t\t  const response = await fetch(url, {\r\n\t\t\tmethod: 'PUT',\r\n\t\t\theaders: {\r\n\t\t\t  'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(newItem),\r\n\t\t  });\r\n\t\t  if (!response.ok) {\r\n\t\t\tthrow new Error('Failed to update order');\r\n\t\t  }\r\n\t\t  const updatedItem = await response.json();\r\n\t\t\tconst updatedData = itemData.map((item) =>\r\n\t\t\t\titem.id === updatedItem.id ? updatedItem : item\r\n\t\t\t);\r\n\t\t\tsetItemData(updatedData);\r\n\t\t\tsetNewItem({ id: ''});\r\n\t\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t\t}\r\n\t  };\r\n\t  \r\n\t  const handleDeleteOrder = async () => {\r\n\t\ttry {\r\n\t\t  const url = 'http://localhost:8080/api/pizza/order/';\r\n\t\t  const response = await fetch(url, {\r\n\t\t\tmethod: 'DELETE',\r\n\t\t\theaders: {\r\n\t\t\t  'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(newItem),\r\n\t\t  });\r\n\t\t  if (!response.ok) {\r\n\t\t\tthrow new Error('Failed to delete order');\r\n\t\t  }\r\n\t\t  const updatedData = itemData.filter((item) => item.id !== newItem.id);\r\n\t\t  setItemData(updatedData);\r\n\t\t  setNewItem({ id: ''});\r\n\t\t} catch (error) {\r\n\t\t  console.error(error);\r\n\t\t}\r\n\t  };\r\n\r\n\t  return (\r\n\t\t<div>\r\n\t\t  <div className='mt-4 flex justify-around'>\r\n\t\t\t<Stack spacing={2} direction='row'>\r\n\t\t\t  <Button variant='outlined' onClick={handleCreateOrder}>\r\n\t\t\t\tCreate\r\n\t\t\t  </Button>\r\n\t\t\t  <Button variant='outlined' onClick={handleUpdateOrder}>\r\n\t\t\t\tUpdate\r\n\t\t\t  </Button>\r\n\t\t\t  <Button variant='outlined' onClick={handleDeleteOrder}>\r\n\t\t\t\tDelete\r\n\t\t\t  </Button>\r\n\t\t\t</Stack>\r\n\t\t  </div>\r\n\t\t  <div>\r\n\t\t\t<input\r\n\t\t\t  type='text'\r\n\t\t\t  placeholder='ID'\r\n\t\t\t  value={newItem.id}\r\n\t\t\t  onChange={(e) => setNewItem({ ...newItem, id: e.target.value })}\r\n\t\t\t/>\r\n\t\t  </div>\r\n\t\t  <div className={classes.orderContainer}>\r\n          <h2>Your Order:</h2>\r\n          {order.length === 0 ? (\r\n            <p>Your order is empty.</p>\r\n          ) : (\r\n            <div>\r\n              {order.map((item, index) => (\r\n                <div key={index} className={classes.orderItem}>\r\n                  <span>\r\n                    {item.name} - ${item.price}\r\n                  </span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.removeButton}\r\n                    onClick={() => removeFromOrder(item)}\r\n                  >\r\n                    Remove\r\n                  </Button>\r\n                </div>\r\n              ))}\r\n              <Button\r\n                variant=\"contained\"\r\n                className={classes.createOrderButton}\r\n                onClick={createOrder}\r\n              >\r\n                Create Order\r\n              </Button>\r\n            </div>\r\n          )}\r\n\t\t</div>\r\n\t\t</div>\r\n\t  );\r\n\t};\r\n  \r\n  export default OrderTable;\r\n\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}