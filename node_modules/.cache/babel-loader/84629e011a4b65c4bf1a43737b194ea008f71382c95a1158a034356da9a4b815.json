{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daniil\\\\Desktop\\\\sobol-react-app\\\\frontend\\\\src\\\\components\\\\DataTable.jsx\";\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst createData = (name, calories, fat, carbs, protein) => {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n};\nconst rows = [createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Eclair', 262, 16.0, 24, 6.0), createData('Cupcake', 305, 3.7, 67, 4.3), createData('Gingerbread', 356, 16.0, 49, 3.9)];\nconst DataTable = ({\n  cellsData,\n  cellsName\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 650\n        },\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: cellsName.map((name, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: index === 0 ? 'left' : 'right',\n              children: name\n            }, name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 9\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              '&:last-child td, &:last-child th': {\n                border: 0\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.calories\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.fat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.carbs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.protein\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 9\n            }, this)]\n          }, row.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n};\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","React","jsxDEV","_jsxDEV","createData","name","calories","fat","carbs","protein","rows","DataTable","cellsData","cellsName","children","component","sx","minWidth","map","index","align","fileName","_jsxFileName","lineNumber","columnNumber","row","border","scope","_c","$RefreshReg$"],"sources":["C:/Users/daniil/Desktop/sobol-react-app/frontend/src/components/DataTable.jsx"],"sourcesContent":["import {\r\n\tPaper,\r\n\tTable,\r\n\tTableBody,\r\n\tTableCell,\r\n\tTableContainer,\r\n\tTableHead,\r\n\tTableRow,\r\n} from '@mui/material'\r\nimport React from 'react'\r\n\r\nconst createData = (name, calories, fat, carbs, protein) => {\r\n\treturn { name, calories, fat, carbs, protein }\r\n}\r\n\r\nconst rows = [\r\n\tcreateData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n\tcreateData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n\tcreateData('Eclair', 262, 16.0, 24, 6.0),\r\n\tcreateData('Cupcake', 305, 3.7, 67, 4.3),\r\n\tcreateData('Gingerbread', 356, 16.0, 49, 3.9),\r\n]\r\n\r\nconst DataTable = ({ cellsData, cellsName }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<TableContainer component={Paper}>\r\n\t\t\t\t<Table sx={{ minWidth: 650 }} aria-label='simple table'>\r\n\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t{cellsName.map((name, index) => (\r\n\t\t\t\t\t\t\t\t<TableCell key={name} align={index === 0 ? 'left' : 'right'}>\r\n\t\t\t\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t{rows.map(row => (\r\n\t\t\t\t\t\t\t<TableRow\r\n\t\t\t\t\t\t\t\tkey={row.name}\r\n\t\t\t\t\t\t\t\tsx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<TableCell component='th' scope='row'>\r\n\t\t\t\t\t\t\t\t\t{row.name}\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align='right'>{row.calories}</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align='right'>{row.fat}</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align='right'>{row.carbs}</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align='right'>{row.protein}</TableCell>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</TableBody>\r\n\t\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DataTable\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}